# TODO Copy /etc files
# - pacman.conf
# - makepkg.conf
---
- name: "Basic machine setup"
  hosts: localhost
  gather_facts: no
  connection: local

  roles:
  - kewlfft.aur

  tasks:
  - name: "Configure user: nenad"
    tags: ["user"]
    become: yes
    user:
      name: nenad
      create_home: yes
      group: users
      groups: ["docker", "input", "wheel", "video", "wireshark"]
      shell: /usr/bin/zsh

  - name: "Configure user: nenad-home"
    tags: ["user"]
    become: yes
    user:
      name: nenad-home
      create_home: yes
      group: users
      groups: ["docker", "input", "wheel", "video", "wireshark"]
      shell: /usr/bin/zsh

  - name: Create .config dir
    tags: ["dotfiles"]
    file:
      path: "~/.config"
      state: directory

  - name: Create .gnupg dir
    tags: ["dotfiles"]
    file:
      path: "~/.gnupg"
      state: directory
      mode: 0700

  - name: Enable NetworkManager
    tags: ["systemd"]
    become: yes
    systemd:
      no_block: False
      name: NetworkManager
      enabled: True
      state: started
      scope: system

  - name: Enable CUPS
    tags: ["systemd"]
    become: yes
    systemd:
      no_block: False
      name: cups-browsed
      enabled: True
      state: started
      scope: system

  - name: Enable docker
    tags: ["systemd"]
    become: yes
    systemd:
      no_block: False
      name: docker
      enabled: True
      state: started
      scope: system

  - name: Enable acpid
    tags: ["systemd"]
    become: yes
    systemd:
      no_block: False
      name: acpid
      enabled: True
      state: started
      scope: system

  - name: Enable clipmenu
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: clipmenud
      state: started
      scope: user

  - name: Enable pulseaudio
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: pulseaudio
      state: started
      scope: user

  - name: Enable pipewire
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: pipewire
      state: started
      scope: user

  - name: Enable xdg-desktop-portal
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: xdg-desktop-portal
      state: started
      scope: user

  - name: Enable xdg-desktop-portal-wlr (for wayland)
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: xdg-desktop-portal-wlr
      state: started
      scope: user

  - name: Enable redshift
    tags: ["systemd", "systemd-user"]
    systemd:
      enabled: True
      name: redshift
      state: started
      scope: user


  # Has to be done before we install any other package
  - name: Install yay
    tags: ["system"]
    aur:
      state: present
      name:
        - yay

  - name: Update all packages
    tags: ["update"]
    aur:
      upgrade: yes

  - name: Install main packages
    tags: ["apps"]
    aur:
      state: present
      name:
        # Community
        - sway
        - pavucontrol
        - pulseaudio
        - termite
        - htop
        - zsh
        - zip
        - nnn
          #- firefox
        - docker
        - docker-compose
        - code
        - xorg-server-xwayland-git # Until xorg-server-xwayland updates their version
        - gopass
        - bemenu
        - clipmenu
        - strace
        - bemenu-wlroots
        - fwupd
        - thunderbird
        - alsa-utils
        - light
        - waybar
        - terminus-font-otb
        - otf-font-awesome
        - ttf-roboto
        - ttf-roboto-mono
        - noto-fonts-emoji
        - bc
        - mako
        - playerctl
        - swaylock
        - swayidle
        - dbeaver
        - wl-clipboard
        - pacman-contrib
        - vlc
        - tldr
        - nomacs
        - libva-intel-driver
        - libva-mesa-driver
        - kubectl
        - libnotify
        - openvpn
        - jq
        - wireshark-qt
        - acpid
        - gnome-keyring
        - grim
        - slurp
        - python-pip
        - nmap
        - bind-tools
        - nm-connection-editor
        - powertop
        - kanshi
        - pipewire
        - libpipewire02
        - pipewire-pulse
        - jack2
        - pipewire-jack
        - kcachegrind
        - chromium
        - imagemagick
        - graphviz
        - python-libevdev
        - python-pyudev
        - libreoffice-fresh
        - blueberry
        - xorg-xeyes
        - vulkan-headers
        - libportal
        - udisks2
        - udiskie
        - ntfs-3g
        - gdb
        - intellij-idea-community-edition
        - cups
        - mpv
        - inetutils
        - bluez-utils
        - ethtool
        - network-manager-applet
        - shellcheck
        # AUR
        - terminus-font-ttf
        - goland
        - goland-jre
        - phpstorm
        - phpstorm-jre
        - yay
        - zsh-theme-powerlevel10k-git
        - j4-dmenu-desktop
        - slack-desktop
        - ydotool
        - oh-my-zsh-git
        - firefox-nightly
        - wdisplays
        - wlogout
        - xdg-desktop-portal-wlr
        - fedora-firefox-wayland-bin
        - swappy
        - ferdi-bin
        - turtl
        - wlroots-git

  - name: Link .config dotfiles
    tags: ["dotfiles"]
    file:
      src: "{{ item.root }}{{ item.path }}"
      dest: "~/.config/{{ item.path }}"
      state: link
      force: yes
    with_filetree:
      - config/
    when:
      # Only list root-level directories
      - "'/' not in item.path"
      - item.state == "directory"

  - name: Create home config directories and symlink all files
    tags: ["dotfiles"]
    file:
      access_time: preserve
      modification_time: preserve
      src: '{{ (item.state == "file") | ternary(item.root+item.path, "") }}'
      dest: "~/{{ item.path }}"
      state: '{{ (item.state == "file") | ternary("link", "directory") }}'
      force: yes
    with_filetree:
      - home/

  - name: Create /etc config directories and symlink all files
    tags: ["system-dotfiles"]
    become: yes
    file:
      access_time: preserve
      modification_time: preserve
      src: '{{ (item.state == "file") | ternary(item.root+item.path, "") }}'
      dest: "/etc/{{ item.path }}"
      state: '{{ (item.state == "file") | ternary("link", "directory") }}'
      force: yes
    with_filetree:
      - etc/

  - name: Load extra playbook
    tags: ["always"]
    include: "{{ extra_playbook }}"
    when: extra_playbook is defined
